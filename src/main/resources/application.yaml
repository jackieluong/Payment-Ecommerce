server:
  port: ${SERVER_PORT}


app:
  frontend-url: ${FRONTEND_URL}
  jwt-secret: ${JWT_SECRET}
  oauth2:
    authorizedRedirectUris: ${FRONTEND_URL}/auth/callback
  jwt:
    access-token-expiration-seconds: '3600'
    refresh-token-expiration-seconds: '2592000'
  decrypt-key: ${DECRYPT_KEY}


hibernate:
  metamodel:
    model_contributor: com.GeekUp.Shop.functions.PostgreSQLFunctionContributor

spring:
  mail:
    username: ${SMTP_USER}
    host: smtp.gmail.com
    password: ${SMTP_PASSWORD}
    port: '587'
    properties:
      mail:
        smtp:
          starttls:
            enable: 'true'
          auth: 'true'


  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        jdbc:
          batch_size: 50
        batch_versioned_data: true
#        generate_statistics: true

        order_inserts: true
        order_updates: true
        format_sql: 'true'


  datasource:
    hikari:
      idle-timeout: '60000'
      maximum-pool-size: '20'
      connection-timeout: '30000'
      max-lifetime: '1800000'
      minimum-idle: '5'
    password: ${DB_PASSWORD}
    url: ${DB_URL}
    username: ${DB_USER}


  application:
    name: Geek-Up


  servlet:
    multipart:
      max-request-size: 10MB
      max-file-size: 5MB

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

springdoc:
  swagger-ui:
    enabled: 'true'
    url: /v3/api-docs
    path: /swagger-ui.html
  api-docs:
    enabled: 'true'
  override-with-generic-response: 'false'

resilience4j:
  ratelimiter:
    instances:
      perUserRateLimiter:
        limit-refresh-period: 10s
        timeout-duration: 2s
        limit-for-period: '5'
      globalRateLimiter:
        limit-for-period: '500'
        limit-refresh-period: 10s
        timeout-duration: 3s


logging:
  level:
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: debug
    org.hibernate.engine.jdbc.batch: debug
    org.hibernate.type.descriptor.sql: TRACE
    org.hibernate.orm.jdbc.bind: trace
    org.postgresql: debug
    org.springframework.messaging: trace
    org.springframework.data.redis: trace
#    io.lettuce.core: DEBUG

cloudinary:
  cloud-name: ${CLOUDINARY_CLOUD_NAME}
  api-secret: ${CLOUDINARY_API_SECRET}
  api-key: ${CLOUDINARY_API_KEY}

payment:

  stripe:
    secret-key: ${STRIPE_SECRET_KEY}
    success-url: https://dev.payment.com/order/%s/status
    cancel-url: https://dev.payment.com/order/%s/status
  vnpay:
    tmn-code: X5AL5D3N
    secret-key: ${VNPAY_SECRET_KEY}
    init-payment-url: https://sandbox.vnpayment.vn/paymentv2/vpcpay.html
    return-url: https://dev.payment.com/order/%s/status
    timeout: 15 # in minutes